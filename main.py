import telebot
import os
from telebot import types
from dotenv import load_dotenv

load_dotenv('token.env')
admin_id = os.getenv('ADMIN_CHAT_ID')

user_problems = {}
waiting_for_review = {}


bot = telebot.TeleBot(os.getenv('TELEGRAM_BOT_TOKEN'))

start_buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
bt_bonus = types.KeyboardButton('–•–æ—á—É –±–æ–Ω—É—Å!')
bt_support = types.KeyboardButton('–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É')
start_buttons.add(bt_bonus)
start_buttons.add(bt_support)

back_button = types.ReplyKeyboardMarkup(resize_keyboard=True)
bt_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
back_button.add(bt_back)

contact_buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
bt_contact = types.KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact=True)
contact_buttons.add(bt_contact)
contact_buttons.add(bt_back)

review_buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
bt_good_review = types.KeyboardButton('–û—Ç–∑—ã–≤ –ø–æ–¥—Ö–æ–¥–∏—Ç')
bt_bad_review = types.KeyboardButton('–û—Ç–∑—ã–≤ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç')
review_buttons.add(bt_good_review)
review_buttons.add(bt_bad_review)

bad_review_buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
bt_retry = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞–∑')
bt_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
bad_review_buttons.add(bt_retry)
bad_review_buttons.add(bt_back)

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü–æ –∫–∞–∫–æ–º—É –ø–æ–≤–æ–¥—É –≤—ã –∫ –Ω–∞–º –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å?', reply_markup=start_buttons)

    bot.register_next_step_handler(message, purpose_bot_using)

def purpose_bot_using(message):
    if message.text == '–•–æ—á—É –±–æ–Ω—É—Å!':
        instruction = (
                    '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–∫—É–ø–æ–∫ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞.' +
                    '\n- –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç wildberries.ru (https://www.wildberries.ru/) –∏–ª–∏ –≤ –º–æ–±–∏–ª—å–Ω–æ–µ ' +
                    '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –ø–æ –Ω–æ–º–µ—Ä—É –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞;- –ù–∞–∂–∞—Ç—å –Ω–∞ ¬´–ü—Ä–æ—Ñ–∏–ª—å¬ª;' +
                    '\n- –í—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª ¬´–ü–æ–∫—É–ø–∫–∏¬ª;\n- –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç, –≥–¥–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ —á—Ç–æ –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –Ω–∞—à —Ç–æ–≤–∞—Ä')
        bot.send_message(message.chat.id, instruction, reply_markup=back_button)
        bot.register_next_step_handler(message, screenshot_processing)
    elif message.text == '–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É':
        describe_problem(message)
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏', reply_markup=start_buttons)
        bot.register_next_step_handler(message, purpose_bot_using)

def describe_problem(message):
        bot.send_message(message.chat.id, '–û–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É', reply_markup=back_button)
        bot.register_next_step_handler(message, message_to_support)

def message_to_support(message):
    if message.text == '–ù–∞–∑–∞–¥':
        start(message)
    else:
        user_problem = message.text
        user_problems[message.chat.id] = user_problem
        get_contact(message)

def get_contact(message):
    bot.send_message(message.chat.id, '–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–º',
                     reply_markup=contact_buttons)
    bot.register_next_step_handler(message, processing_contact)

def processing_contact(message):
    if message.text == '–ù–∞–∑–∞–¥':
        describe_problem(message)
    elif message.contact:
        contact = message.contact
        user_problem = user_problems.get(message.chat.id, "–ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
        bot.send_message(
            admin_id,
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {contact.phone_number}\n"
            f"–û–±—Ä–∞—â–µ–Ω–∏–µ: {user_problem}"
        )
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ–¥–∞–ª–∏ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', reply_markup=start_buttons)
        bot.register_next_step_handler(message, purpose_bot_using)
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', reply_markup=contact_buttons)
        bot.register_next_step_handler(message, processing_contact)

def screenshot_processing(message):
    if message.text == '–ù–∞–∑–∞–¥':
        start(message)
    elif message.content_type == 'photo':
        bot.send_message(message.chat.id,
                         '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.\n'
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –º—ã —Å–∫–æ—Ä–æ –≤–∞–º –æ—Ç–≤–µ—Ç–∏–º!\n'
                         '–î–æ –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞—à–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
                         reply_markup=types.ReplyKeyboardRemove())
        photo_id = message.photo[-1].file_id
        file_info = bot.get_file(photo_id)
        file = bot.download_file(file_info.file_path)
        message_admin = bot.send_photo(admin_id, file, reply_markup=review_buttons)
        waiting_for_review[message_admin.id] = message.chat.id
        bot.register_next_step_handler(message_admin, lambda msg: review_processed(msg, message))
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–≤–æ–µ–≥–æ –æ—Ç–∑—ã–≤–∞', reply_markup=back_button)
        bot.register_next_step_handler(message, screenshot_processing)

def review_processed(message_admin, message):
    replied_message_admin_id = message_admin.reply_to_message.message_id

    user_message_chat_id = waiting_for_review.pop(replied_message_admin_id, None)

    if user_message_chat_id == message.chat.id:

        if message_admin.text == '–û—Ç–∑—ã–≤ –ø–æ–¥—Ö–æ–¥–∏—Ç':
            good_review_message = '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –î–∞—Ä–∏–º –≤–∞–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –≥–∞—Ä–∞–Ω—Ç–∏—é —Å—Ä–æ–∫–æ–º –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤!\n'\
                                   "–í–∞—à –∫–æ–¥ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ - 8605321373223\n"\
                                   "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–æ–≤–∞—Ä–æ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤ –∏–ª–∏ –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å, "\
                                   "–ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ —ç—Ç–æ—Ç —á–∞—Ç"
            bot.send_message(message.chat.id, good_review_message, reply_markup=start_buttons)
            bot.register_next_step_handler(message, purpose_bot_using)
        elif message_admin.text == '–û—Ç–∑—ã–≤ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç':
            bad_review_message = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞üòî\n'\
                                     '–î–ª—è –µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è:\n'\
                                     '- –ó–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç wildberries.ru (https://www.wildberries.ru/) –∏–ª–∏ –≤ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '\
                                     '–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –ø–æ –Ω–æ–º–µ—Ä—É –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞;\n'\
                                     '- –ù–∞–∂–∞—Ç—å –Ω–∞ ¬´–ü—Ä–æ—Ñ–∏–ª—å¬ª;\n'\
                                     '- –í—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª ¬´–ü–æ–∫—É–ø–∫–∏¬ª;\n'\
                                     '- –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç, –≥–¥–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ —á—Ç–æ –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –Ω–∞—à —Ç–æ–≤–∞—Ä\n'
            bot.send_message(message.chat.id, bad_review_message, reply_markup=bad_review_buttons)
            bot.register_next_step_handler(message, bad_review_retrying)
        else:
            bot.send_message(message_admin.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫', reply_markup=review_buttons)
            bot.register_next_step_handler(message_admin, lambda msg: review_processed(msg, message))
    else:
        bot.register_next_step_handler(message_admin, lambda msg: review_processed(msg, message))

def bad_review_retrying(message):
    if message.text == '–ù–∞–∑–∞–¥':
        start(message)
    elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞–∑':
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–≤–æ–µ–≥–æ –æ—Ç–∑—ã–≤–∞',
                         reply_markup=bt_back)
        bot.register_next_step_handler(message, screenshot_processing)
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏',
                         reply_markup=bad_review_buttons)
        bot.register_next_step_handler(message, bad_review_retrying)


bot.polling(none_stop=True)

